openapi: 3.0.3
info:
  title: Yohuan's TodoList API
  description: 'This is API doc for Yohuan''s todo list.'
  version: 1.0.0
servers:
  - url: '/api'
    description: Production server API
tags:
  - name: Todo
    description: Everything about todo
paths:
  '/todos':
    get:
      tags:
        - Todo
      summary: Get a list of todo items
      operationId: getTodos
      responses:
        '200':
          description: A list object of todo items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
    post:
      tags:
        - Todo
      summary: Create a todo item
      operationId: createTodo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                todoDescription:
                  type: string
                  example: 'Learn how to code'
              required:
                - todoDescription
      responses:
        '201':
          description: The created todo item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
  '/todos/{todoId}':
    parameters:
      - name: todoId
        description: ID of the todo item
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TodoId'
    get:
      tags:
        - Todo
      summary: Retrieve a todo by ID
      description: Given a todo ID, return a todo item.
      operationId: getTodo
      responses:
        '200':
          description: A JSON of todo item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          $ref: '#/components/responses/404-NotFound'
    put:
      tags:
        - Todo
      summary: Update a todo item
      description: To update a todo, at least one target field must be given.
      operationId: updateTodo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                todoDescription:
                  type: string
                  example: 'Modified toto'
                isCompleted:
                  type: boolean
                  example: true
      responses:
        '200':
          description: A JSON of the modified todo item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          $ref: '#/components/responses/400-BadRequest'
        '404':
          $ref: '#/components/responses/404-NotFound'
    delete:
      tags:
        - Todo
      summary: Delete a todo item
      operationId: removeTodo
      responses:
        '204':
          description: Success
components:
  schemas:
    TodoId:
      type: string
      example: todo_GzFxKH
    Todo:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TodoId'
        object:
          type: string
          enum:
            - todo
        description:
          type: string
        isCompleted:
          type: boolean
        creationTime:
          description: Unix epoch timestamp of the creation time
          type: integer
          format: int64
          default: 0
      required:
        - id
        - description
        - isCompleted
      example:
        id: todo_UHwkfm
        object: 'todo'
        description: 'Learn how to write test'
        isCompleted: false
        creationTime: 1613237017
    TodoList:
      type: object
      properties:
        object:
          type: string
          enum:
            - list
        data:
          type: array
          items:
            $ref: '#/components/schemas/Todo'
      required:
        - data
    Error:
      type: object
      properties:
        code:
          type: integer
          minimum: 0
          example: 13
        message:
          type: string
          example: 'Something wrong'
      required:
        - code
  responses:
    400-BadRequest:
      description: The input parameters do not meet expectation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    404-NotFound:
      description: The requested resource is not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
